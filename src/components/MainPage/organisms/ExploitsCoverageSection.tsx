import React from 'react'
import AboutThesis from '../molecules/AboutThesis'
import FeatureListSection from '../molecules/FeatureListSection'
// import { Flex, Grid } from '../../../../components/atoms/Layout'
// import { SectionTitle } from '../../../../components/atoms/Typography'
// import { AboutThesis } from '../molecules/AboutThesis'
// import { Text } from '../../../../components/atoms/Typography'
// import { useWindowDimensions } from '../../../../hooks/internal/useWindowDimensions'

// export const ExploitsCoverageSection = <ExploitsCoverageSectionFunction />

// export const StyledWhiteCircle = styled.div<{
//   size?: number
// }>`
//   /* border is 100% #fafafa 4px */
//   border: 4px solid #fafafa;
//   border-radius: 50%;
//   height: ${(props) => (props.size ?? 20) - 8}px;
//   width: ${(props) => (props.size ?? 20) - 8}px;
// `

// export function AboutThesisStyled({ title, text }: { title: string; text: string | React.ReactNode }): JSX.Element {
//   return (
//     <Flex mt={10}>
//       <Flex
//         style={{
//           minWidth: '30px',
//           marginTop: '5px',
//         }}
//       >
//         {/* <img src={whiteCircle} alt="small circle" /> */}
//         <WhiteCircle />
//       </Flex>
//       <Flex col gap={10}>
//         <Text
//           style={{
//             lineHeight: '24px',
//           }}
//           mont
//           extrabold
//           light
//           t1s
//           mt={4}
//         >
//           {title}
//         </Text>
//         <Text
//           light
//           regular
//           style={{
//             lineHeight: '24px',
//           }}
//           mt={10}
//           t3s
//         >
//           {text}
//         </Text>
//       </Flex>
//     </Flex>
//   )
// }

export function ExploitsCoverageSection({
  // sectionRef: ref,
  // getScrollerForThisRef,
  // isVisible,
  useScrollingRef,
}: {
  useScrollingRef: () => React.MutableRefObject<HTMLDivElement | null>
  // sectionRef?: React.Ref<HTMLDivElement>
  // getScrollerForThisRef?: (
  //   ref: ((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement>
  // ) => () => void
  // isVisible?: boolean
}): JSX.Element {
  const ref = useScrollingRef()
  // const { isMobile } = useWindowDimensions()
  // const scroller = useMemo(
  //   () => (ref && getScrollerForThisRef ? getScrollerForThisRef(
  // </h2>
  //   if (isVisible) {
  //     // console.log('currently visible: ', 'ExploitsCoverageSection')
  //     // console.log('ExploitsCoverageSection > useEffect > isVisible > now trying to scroll here')
  //     // console.log('my ref: ', ref)
  //     scroller()
  //   }
  // }, [isVisible, scroller, ref])

  const Theses = (
    <>
      <AboutThesis
        title="Simple"
        text={
          <>
            Set a coverage limit and get a
            <span className="font-bold">single policy for your entire portfolio.</span>
          </>
        }
      />
      <AboutThesis
        title="Dynamic"
        text={
          <>
            System monitors changes in your portfolio positions and{' '}
            <span className="font-bold">adjusts the rate for coverage accordingly.</span>
          </>
        }
      />
      <AboutThesis
        title="Fast and hassle-free"
        text={
          <>
            Parametric claims assessment system does not require filing a claim and allows you to{' '}
            <span className="font-bold">receive a payout within one week.</span>
          </>
        }
      />
      <AboutThesis
        title="Transparent"
        text={
          <>
            Solace is the only crypto protection protocol to publish its{' '}
            <span className="font-bold">pricing, risk data and risk models to GitHub</span> and
            decentralized storage using IPFS.
          </>
        }
      />
    </>
  )

  const Title = (
    <>
      Exploits <span className="text-red-600 font-bold">Coverage</span>
    </>
  )

  return FeatureListSection(ref, Title, Theses)
}
