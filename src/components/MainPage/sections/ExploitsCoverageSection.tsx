import React from 'react'
// import { Flex, Grid } from '../../../../components/atoms/Layout'
// import { SectionTitle } from '../../../../components/atoms/Typography'
// import { AboutThesis } from '../molecules/AboutThesis'
// import { Text } from '../../../../components/atoms/Typography'
// import { useWindowDimensions } from '../../../../hooks/internal/useWindowDimensions'

// export const ExploitsCoverageSection = <ExploitsCoverageSectionFunction />

// export const StyledWhiteCircle = styled.div<{
//   size?: number
// }>`
//   /* border is 100% #fafafa 4px */
//   border: 4px solid #fafafa;
//   border-radius: 50%;
//   height: ${(props) => (props.size ?? 20) - 8}px;
//   width: ${(props) => (props.size ?? 20) - 8}px;
// `

export const WhiteCircle = function () {
  return <div className="border border-solid border-light rounded-full h-3 w-3" />
}

// export function AboutThesisStyled({ title, text }: { title: string; text: string | React.ReactNode }): JSX.Element {
//   return (
//     <Flex mt={10}>
//       <Flex
//         style={{
//           minWidth: '30px',
//           marginTop: '5px',
//         }}
//       >
//         {/* <img src={whiteCircle} alt="small circle" /> */}
//         <WhiteCircle />
//       </Flex>
//       <Flex col gap={10}>
//         <Text
//           style={{
//             lineHeight: '24px',
//           }}
//           mont
//           extrabold
//           light
//           t1s
//           mt={4}
//         >
//           {title}
//         </Text>
//         <Text
//           light
//           regular
//           style={{
//             lineHeight: '24px',
//           }}
//           mt={10}
//           t3s
//         >
//           {text}
//         </Text>
//       </Flex>
//     </Flex>
//   )
// }

function AboutThesis({
  title,
  text,
}: {
  title: string
  text: string | React.ReactNode
}): JSX.Element {
  return (
    <div className="flex mt-2.5">
      <div className="min-w-[30px] mt-[5px]">
        <WhiteCircle />
      </div>
      <div className="flex-col gap-2.5">
        <div className="font-title font-bold text-2xl leading-6">{title}</div>
        <div className="text-base leading-6 mt-2.5 ">{text}</div>
      </div>
    </div>
  )
}

export function ExploitsCoverageSection({
  // sectionRef: ref,
  // getScrollerForThisRef,
  // isVisible,
  useScrollingRef,
}: {
  useScrollingRef: () => React.MutableRefObject<HTMLDivElement | null>
  // sectionRef?: React.Ref<HTMLDivElement>
  // getScrollerForThisRef?: (
  //   ref: ((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement>
  // ) => () => void
  // isVisible?: boolean
}): JSX.Element {
  const ref = useScrollingRef()
  // const { isMobile } = useWindowDimensions()
  // const scroller = useMemo(
  //   () => (ref && getScrollerForThisRef ? getScrollerForThisRef(ref) : () => console.log('no ref')),
  //   [ref, getScrollerForThisRef]
  // )
  // useEffect(() => {
  //   if (isVisible) {
  //     // console.log('currently visible: ', 'ExploitsCoverageSection')
  //     // console.log('ExploitsCoverageSection > useEffect > isVisible > now trying to scroll here')
  //     // console.log('my ref: ', ref)
  //     scroller()
  //   }
  // }, [isVisible, scroller, ref])

  return (
    // <div col stretch pr={isMobile ? 40 : 150} pl={isMobile ? 40 : 150} justifyCenter ref={ref}>
    <div className="flex flex-col pr-10 sm:pr-36 justify-center" ref={ref}>
      {/* <SectionTitle light isMobile={isMobile}> */}
      <h2 className="text-4xl sm:text-5xl font-title">
        Exploits <span className="text-red-600 font-bold">Coverage</span>
      </h2>
      {/* <Flex col gap={70} mt={70}> */}
      <div className="flex flex-col gap-17.5 mt-17.5">
        {/* <Grid gap={isMobile ? 50 : 60} columns={isMobile ? 1 : 2}> */}
        <div className="grid columns-1 sm:columns-2 gap-12 sm:gap-17.5">
          <AboutThesis
            title="Simple"
            text={
              <>
                Set a coverage limit and get a {/* <Text extrabold inline light> */}
                <span className="font-bold">single policy for your entire portfolio.</span>
              </>
            }
          />
          <AboutThesis
            title="Dynamic"
            text={
              <>
                System monitors changes in your portfolio positions and{' '}
                <span className="font-bold">adjusts the rate for coverage accordingly.</span>
              </>
            }
          />
          <AboutThesis
            title="Fast and hassle-free"
            text={
              <>
                Parametric claims assessment system does not require filing a claim and allows you
                to <span className="font-bold">receive a payout within one week.</span>
              </>
            }
          />
          <AboutThesis
            title="Transparent"
            text={
              <>
                Solace is the only crypto protection protocol to publish its{' '}
                <span className="font-bold">pricing, risk data and risk models to GitHub</span> and
                decentralized storage using IPFS.
              </>
            }
          />
        </div>
      </div>
    </div>
  )
}
